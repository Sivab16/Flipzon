
<div class="bg-light border m-2 col-5 p-4  " @onclick="(args)=>GetLastProductName(args,Product.Name)">
    <h4 class="text-primary">Product - @Product.Id</h4>

    @* <div> <input type="checkbox" @onchange="WishListUpdate" /> Add to Wishlist  </div> *@
    Name: @Product.Name<br />
    Price: @Product.Price<br />
    Show Feature:
    <input type="checkbox" @bind-value="Product.IsAvailable" checked="@(Product.IsAvailable ? "Checked" : null)" />
    <br />
    @if (Product.IsAvailable)
    {
        @foreach (var itemFeature in Product.Feature)
        {
            <p> @itemFeature.Key - @itemFeature.Value</p>
        }

    }
    <br />
    <_AddBuyNow IsAvailable="@Product.IsAvailable">

    </_AddBuyNow>


</div>

@code {

    [Parameter]
    public ProductModel Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnWishListSelection { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelection { get; set; }





    //asynchronous programming - allows a method to run without blocking the main thread.
    private async Task WishListUpdate(Microsoft.AspNetCore.Components.EventCallback ChangeEventArgs )
    {
        // await OnWishListSelection.InvokeAsync((bool)ChangeEventArgs.);
        
    }

  

    private async Task GetLastProductName(MouseEventArgs e, string name)
    {
        await OnLastSelection.InvokeAsync(name);
    }




}

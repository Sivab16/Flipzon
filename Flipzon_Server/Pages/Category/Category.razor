@page "/Category/category"

@inject ICategoryRepository _categoryRepository

<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Category</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="category/create" class="btn btn-info form-control"> Add New Category </a>
    </div>

    <div class="col-12">
        <br />
        @if (CategoryList.Any())
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Added Date</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in CategoryList)
                    {
                        <tr>
                            <td>
                                @item.Name
                            </td>
                            <td>
                                @item.Description
                            </td>
                            <td>@item.CreatedDate</td>
                            <td>
                                <NavLink href="@($"category/edit/{item.Id}")" class="btn btn-primary">Edit</NavLink>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        }
        else
        {
            if (IsLoading)
            {
                <div class="text-md-center">
                    <img src="/images/loading.gif" />
              @*       <img src="/images/loading_blck.gif" /> *@
                  @*   <img src="/images/loading_clr.gif" /> *@
                </div>

            }
            else
            {
                <p>no records</p>
            }

        }

    </div>
</div>


@code {

    private IEnumerable<CategoryDTO> CategoryList { get; set; } = new List<CategoryDTO>();

    public bool IsLoading { get; set; } = true;
    protected override async Task OnInitializedAsync()
    {

        await Task.Run(LoadCategories);
    }

    private void LoadCategories()
    {
        CategoryList = _categoryRepository.GetAll();
        IsLoading = false;
    }
}

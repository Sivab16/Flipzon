@page "/Product/Productlist"



@inject IProductRepository _productRepository
@inject IJSRuntime _jsRuntime



<_DeleteConfirmation IsProcessing=@IsLoading ConfirmationChanged="ConfirmDelete_Click"> </_DeleteConfirmation>
<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Product List</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="product/create" class="btn btn-info form-control"> Add New Product </a>
    </div>

    <div class="col-12">
        <br />
        @if (ProductList.Any())
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Shop Favourites</th>
                        <th>Customer Favourites</th>
                        <th>Category</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ProductList)
                    {
                        <tr>
                            <td>
                                @item.Name
                            </td>
                            <th>
                                <input type="checkbox" disabled checked="@item.ShopFavorites" />
                            </th>
                            <th>
                                <input type="checkbox" disabled checked="@item.CustomerFavorites" />
                            </th>
                            <th>
                                @item.Category.Name
                            </th>
                            <td>
                                <NavLink href="@($"product/edit/{item.Id}")" class="btn btn-primary">Edit</NavLink>
                                <button class="btn btn-danger" @onclick="()=>HandDelete(item.Id)">Delete</button>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        }
        else
        {
            if (IsLoading)
            {
                <div class="text-md-center">
                    <img src="/images/loading.gif" />
                </div>

            }
            else
            {
                <p>no records</p>
            }

        }

    </div>
</div>


@code {
    public int DeleteCategoryId { get; set; } = 0;

    private IEnumerable<ProductDTO> ProductList { get; set; } = new List<ProductDTO>();

    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
        }

    }

    private  async Task LoadCategories()
    {
        IsLoading = true;
        StateHasChanged();
        ProductList =  await _productRepository.GetAll();
        IsLoading = false;
        StateHasChanged();

    }

    private void HandDelete(int Id)
    {
        DeleteCategoryId = Id;
        _jsRuntime.InvokeVoidAsync("ShowDeleteModal");
    }

    private async Task ConfirmDelete_Click(bool IsConfirm)
    {
        IsLoading = true;
        if (IsConfirm && DeleteCategoryId != 0)
        {
            await _productRepository.Delete(DeleteCategoryId);
            await LoadCategories();
            await _jsRuntime.InvokeVoidAsync("HideDeleteModal");
        }
        IsLoading = false;
    }


}

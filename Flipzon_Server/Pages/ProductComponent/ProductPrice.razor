@page "/product/price"
@page "/product/price/{Id:int}"

@inject IProductRepository _productRepository
@inject IProductPriceRepository _productPriceRepository

<h3 class="card-title text-primary mb-3 ml-3">Product Price Management</h3>
@if (IsLoading)
{
    <div class="text-center">
        <img src="/images/loading.gif" />
    </div>
}
else
{
    <div class="row border p-2 mb-4">

        <div class="col-11">
            <div class="card-body">
                <h4> @Product.Name </h4>
                <span> Category : @Product.Category.Name</span><br />
                <span> Description : @Product.Description</span>
            </div>

        </div>
        <div class="col-1">
            <img src="@Product.ImageUrl" class="w-100" />
        </div>

    </div>

    <SfGrid @ref="productPriceGrid" DataSource="@ProductPrices" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" AllowPaging="true">
        <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" ShowDeleteConfirmDialog="true"></GridEditSettings>
        <GridEvents OnActionBegin="ActionHandler" TValue="ProductPriceDTO"></GridEvents>

        <GridColumns>
            <GridColumn Field=@nameof(ProductPriceDTO.Id) HeaderText="Product ID" HeaderTextAlign="TextAlign.Left" Width="250"></GridColumn>
            <GridColumn  HeaderText="Size">
                <EditTemplate>
                    <Syncfusion.Blazor.DropDowns.SfDropDownList DataSource="Sizes" TItem="string" TValue="string"
                                                                @bind-Value="((context as ProductPriceDTO).Size)">

                    </Syncfusion.Blazor.DropDowns.SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn Field=@nameof(ProductPriceDTO.Price) HeaderText="Prize" Format="C2"></GridColumn>
        </GridColumns>

    </SfGrid>
}


@code {

    [Parameter]
    public int Id { get; set; }

    private ProductDTO Product { get; set; } = new();

    private IEnumerable<ProductPriceDTO> ProductPrices { get; set; } = new List<ProductPriceDTO>();

    IEnumerable<String> Sizes = new List<String>()
    {

        "128 GB" , "256 GB" , "512 GB"
    };

    private bool IsLoading { get; set; } = true;

    public SfGrid<ProductPriceDTO> productPriceGrid;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            IsLoading = true;
            StateHasChanged();
            Product = await _productRepository.Get(Id);
            ProductPrices = await _productPriceRepository.GetAll(Id);
            IsLoading = false;
            StateHasChanged();
        }
    }

    protected async void ActionHandler(ActionEventArgs<ProductPriceDTO> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            args.Data.Id = Id;
            if (args.Action == "Add")
            {
                await _productPriceRepository.Create(args.Data);
                ProductPrices = await _productPriceRepository.GetAll(Id);
                productPriceGrid.Refresh();
            }
            if (args.Action == "Edit")
            {

            }
            if (args.Action == "Update")
            {

            }
        }
    }

}
